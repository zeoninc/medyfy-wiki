rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /adminUpdate/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /analytics/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /answers/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /block/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if false;
    }

    match /users/{parent}/blockRef/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if true;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /cards/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /users/{parent}/chatRef/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if true;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /chat_messages/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /chats/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /comment/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if resource.data.userRef == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /course/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /crm/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /deck/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /discounts/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /engagement/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if resource.data.userRef == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /feedback/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /ff_user_push_notifications/{document} {
      allow create: if /databases/$(database)/documents/users/$(request.auth.uid) == request.resource.data.sender;
      allow read: if false;
      allow write: if false;
      allow delete: if false;
    }

    match /game_scores/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /games/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /glossary/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /labs/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /learn/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /legal/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /notifications/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /orders/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /payments/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /playlist/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /products/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /users/{parent}/questionRef/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if true;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /questions/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /reviews/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /subject/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if false;
    }

    match /submit/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /subscriptions/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /system/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /task/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /test/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if false;
    }

    match /users/{parent}/testRef/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if true;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /todo/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /users/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.uid;
    }

  	// don't allow direct writes from the SDK (go through cloud function)
    allow write: if false;
    
    // every user can read their own personal bag
    match /wikis/{wikiName}/bags/{personalBag}/tiddlers/{document=**} {    	
    	allow get, list: if request.auth != null && (personalBag == 'user%3A' + request.auth.uid);
    }
    // for all other bags, the user's role must be verified
    match /wikis/{wikiName}/bags/{bagName}/tiddlers/{document=**} {
        function hasAccessByRole() {
          // don't allow access to personal bags in this match clause
          let isPersonalBag = bagName.matches('^user%3A.*');
          // anybody with at least reader can read non-personal bags
          let allowedByRole = get(/databases/$(database)/documents/wikis/$(wikiName)/users/$(request.auth.uid)).data.role >= 2;
          return !isPersonalBag && allowedByRole;
        }
        allow get, list: if request.auth != null && hasAccessByRole();
    }
  }
}
